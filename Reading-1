file name: 1-s2.0-S1084804520302551-main
ref: Hai Lin, Sherali Zeadally, et al. A survey on computation offloading modeling for edge computing. 
      Journal of Network and Computer Applications 169(2020), 102781.

title: A survey on computation offloading modeling for edge computing

主题：边缘计算中的计算分流问题
结构：
1、对前人提出的边缘计算结构进行分类
2、对 channel model, computation and communication model, and energy harvesting model等主流的计算分流模型，
并通过 (non-)convex optimization, Markov decision process, game theory, Lyapunov optimization,
or machine learning对每种模型进行分析

核心内容：
1、Computation offloading, which offloads computation tasks to EC,
  consists of a transmission procedure, a remote execution procedure, and
  a result send-back procedure

2、offloading scheme：
    a.Task partition: If a task is partitionable, we need to optimally
      partition the task before offloading (Fig. 1b). Otherwise, the whole
      task should be offloaded to an EC server .
    b.Offloading decision (task placement): to decide which EC server(s)
      will execute the whole task or the partitioned task. It is worth noting
      that the task can also be executed locally.
    c.Resource allocation: to determine the amount of resources needed.
      These resources include computing resources, communication resources, and energy which should be allocated for the tasks or
      components. 
      导出问题的核心在于以上三个步骤的最优化
      
3、主流Edge computing architectures and frameworks ：
    a.European Telecommunications Standards Institute
      (ETSI) MEC, 
    b.OpenFog
    c.mobile Edge computing for the Internet of Things
      (EdgeIoT)
    d.FLexible Edge Computing (FLEC)
    分类：two-tier(2级构架)/three-tier(3级构架)
    The two-tier architecture (ED-EC) enables EC alone to handle computation
    tasks while in the three-tier architecture (ED-EC-Cloud) EC works as a
    complement to cloud computing. 

4、二级构架：ED-EC
  最重要的二级构架：ETSI MEC， defines, from top to bottom, a mobile edge system level, a mobile edge host level and a network level. 
                              The mobile edge host level is the fundamental part of the MEC framework which hosts and manages all edge applications. 
                              The mobile edge system level provides an abstraction of the underlying MEC system for end users and 
                              third parties whereas the underlying networks level offers connectivity to a variety of accesses including 3GPP mobile networks, 
                              local access network and external network such as the Internet
  其他二级构架举例：Mobile Ad hoc Cloud (MAC)，proposes an ad-hoc EC architecture which consists of five components: an application manager, a resource manager, 
                  a context manager, a communication manager, and a task offloading manager. Mobile EDs act as both users and EC servers. When a mobile ED wishes 
                  to execute a computation-intensive task while its CPU resources are being heavily used, it offloads the task to another mobile ED (or others). 
5、三级构架：ED-EC-Cloud
比如：The OpenFog consortium defines a hierarchical architecture 

6、基于一些特殊场景/应用的构架 In the literature, there are also some edge computing architectures/ frameworks designed for specific applications.

7、构架的总结：A two-tier architecture handles all tasks at the edge, so it works well for time-sensitive applications. In contrast, 
              the design of the two-tier architecture focuses more on edge server management, performance optimization 
              (e.g. load balancing, execution latency), and application management. A three-tier architecture is suitable 
              for applications which have both time-sensitive tasks and computation-intensive tasks. 
              
8、计算分流的分类：based on offloading goals、classify the computation offloading into static offloading and dynamic offloading
classify computation offloading from two other perspectives (Fig. 5): one is from offloading flow. The second one is based on offloading scenario

Computation offloading related techniques：
9、Offloading mode：: depending on whether a task is partitionable
  Two computation offloading modes have been defined in EC: binary（无法拆分） and partial（可拆分） offloading
    partial  offloading：
        parallel：the offloading strategy only needs to decide where to place the components
        sequential：should define the components’ placement as well as their scheduling.

10、Channel model: depending on multiple access mode
  Interference model：CDMA
  interference-free model：OFDMA

11、Computing model: depending on the definition of the computation task and the queue model
    Energy consumption optimization and latency minimization are two important objectives of computation offloading
     mainly caused by task execution and transmission
     
12、Energy harvesting（能量收集） model: depending on the knowledge about energy arrivals
  classified as deterministic（确定的） or stochastic（随机的）
  
13、计算分流模型中的重要参数/决策：
      Offloading decision：分流到本地/云端/边缘?
      Server selection
      Wireless resource allocation:使用哪部分无线资源进行数据传输
      Transmission power setting:能量限制
      Computation resource allocation:计算资源的分配
      
14、计算分流的目标：最低延迟、最小能耗、任务分发时间最短、计算资源使用最大化、经济开销最小

/ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * /

file name: 08424578
ref: Guiyang Luo Quan Yuan, Haibo Zhou， et al. Cooperative Vehicular Content Distribution in Edge Computing Assisted 5G-VANET. 
  China Communications 2018, July:1-17

title: Cooperative Vehicular Content Distribution in Edge Computing Assisted 5G-VANET

kye words:EC 车辆 内容感知 算法

主要讨论 边缘计算在处理车辆产生的大量数据时的分发作用
提出问题：a.节点之间如何合作以最大化计算效率
         b.如何解决不同地区交通状况不同的问题，以实现每个车辆获得高质量的服务
         c.如何解决计算效率和延迟的问题
         
主要挑战（content prefetching and content distribution）和解决办法
        a.prefetching: 车辆的快速移动等问题会造成交通状况的不平衡。导致网络资源利用的不平衡
          对此提出的解决技术： multi-place multi-factor strategy,基于机器学习
          收集以往的数据->机器学习->判断当前的状态->将拥塞基站(BS)收集的资源分发给周边非拥塞BS处理
          或者是在车辆进入拥塞BS控制范围之前，先从临近非拥塞BS获取部分目标数据(prefetch)，以降低拥塞BS的负载. 这种方式需要原先缓存数据(pre-cache)
        b. distrubtion:  three-phase content sharing scheduling 机制
            每个人broadcast他们的beacon->on-broad units与MBS通信，发送自己的信息、请求. MBS集中处理这些请求->每人从自己的邻居获得自己请求的内容
            
            
基于图论的算法：
Input: The set of sender nodes S and corresponding transmitted data items imti, 
which is obtained by Greedy-MWIS algorithm. 
1: while Ni in S do loop for each sender 
2:    Obtain the set of receivers a for Ni. 
3:    Get the set of cached data items D i for Ni. 
4:    Create a map Result (<int, double>) 
5:    while di in D i do loop for each data item 
6:        a <- f(a,di)
7:        Add < di, a> into Result 
8:    end while 
9:    Select top |imti| data items from Result according to balanced rate. 
10:   imti <- selected |imti| data items 
11: end while

/ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * /

ref: Wazir Zada Khan, Ejaz Ahmed, Saqib Hakak, et al. Edge computing: A survey. 2019, 97:219-235.

title: Edge computing: A survey

主要内容：
1、边缘计算的主要特征（边缘设备密集的地理分布、可移动性、地理位置敏感、低延迟、上下文感知、不同设备间的异质性）
2、边缘计算和云计算、小云计算（cloudlet）、雾计算、移动边缘计算之间的区别
3、先进边缘计算技术的应用（资源管理、大数据分析、安全和隐私、实时数据应用）
4、open challenges：
  a.用户对边缘计算设备的信任
  b.动态实时的计费标准
  c.服务发现、服务分配、可移动性
  d.不同边缘计算平台之间的合作
  e.安全性
  f.低出错成本的部署方案

/ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * /













